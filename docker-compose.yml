version: '3.8'

services:
  auth-api:
    build: ./auth-api
    ports:
      - "8000:8000"
    environment:
      - AUTH_API_PORT=8000
      - USERS_API_ADDRESS=http://users-api:8083
      - JWT_SECRET=PRFT
    networks:
      - msa-network

  users-api:
    build: ./users-api
    ports:
      - "8083:8083"
    environment:
      - JWT_SECRET=PRFT
      - SERVER_PORT=8083
    networks:
      - msa-network

  log-message-processor:
    build: ./log-message-processor
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    depends_on:
      - redis
    networks:
      - msa-network

  todos-api:
    build: ./todos-api
    ports:
      - "8082:8082"
    environment:
      - TODO_API_PORT=8082
      - JWT_SECRET=PRFT
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    depends_on:
      - redis
    networks:
      - msa-network

  frontend:
    build: ./frontend
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - AUTH_API_ADDRESS=http://auth-api:8000
      - TODOS_API_ADDRESS=http://todos-api:8082
    networks:
      - msa-network

  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    networks:
      - msa-network

  cadvisor:
    image: google/cadvisor:latest
    ports:
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - msa-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - msa-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - msa-network

networks:
  msa-network:
    driver: bridge
